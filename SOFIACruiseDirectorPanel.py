# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SOFIACruiseDirectorPanel.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1221, 830)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.LegTimers = QtWidgets.QGroupBox(self.centralwidget)
        self.LegTimers.setObjectName("LegTimers")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.LegTimers)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.widget = QtWidgets.QWidget(self.LegTimers)
        self.widget.setObjectName("widget")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.leg_timer_stop = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leg_timer_stop.sizePolicy().hasHeightForWidth())
        self.leg_timer_stop.setSizePolicy(sizePolicy)
        self.leg_timer_stop.setObjectName("leg_timer_stop")
        self.gridLayout_8.addWidget(self.leg_timer_stop, 0, 1, 1, 1)
        self.leg_timer_reset = QtWidgets.QPushButton(self.widget)
        self.leg_timer_reset.setObjectName("leg_timer_reset")
        self.gridLayout_8.addWidget(self.leg_timer_reset, 1, 0, 1, 2)
        self.leg_timer_start = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leg_timer_start.sizePolicy().hasHeightForWidth())
        self.leg_timer_start.setSizePolicy(sizePolicy)
        self.leg_timer_start.setObjectName("leg_timer_start")
        self.gridLayout_8.addWidget(self.leg_timer_start, 0, 0, 1, 1)
        self.gridLayout_2.addWidget(self.widget, 3, 0, 1, 1)
        self.widget_2 = QtWidgets.QWidget(self.LegTimers)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.time_select_remaining = QtWidgets.QRadioButton(self.widget_2)
        self.time_select_remaining.setChecked(True)
        self.time_select_remaining.setObjectName("time_select_remaining")
        self.gridLayout_9.addWidget(self.time_select_remaining, 0, 0, 1, 1)
        self.time_select_elapsed = QtWidgets.QRadioButton(self.widget_2)
        self.time_select_elapsed.setChecked(False)
        self.time_select_elapsed.setObjectName("time_select_elapsed")
        self.gridLayout_9.addWidget(self.time_select_elapsed, 0, 1, 1, 1)
        self.leg_duration = QtWidgets.QTimeEdit(self.widget_2)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.leg_duration.setFont(font)
        self.leg_duration.setAlignment(QtCore.Qt.AlignCenter)
        self.leg_duration.setDateTime(QtCore.QDateTime(QtCore.QDate(2000, 1, 1), QtCore.QTime(0, 0, 0)))
        self.leg_duration.setCurrentSection(QtWidgets.QDateTimeEdit.HourSection)
        self.leg_duration.setTimeSpec(QtCore.Qt.LocalTime)
        self.leg_duration.setObjectName("leg_duration")
        self.gridLayout_9.addWidget(self.leg_duration, 3, 0, 1, 2)
        self.txt_leg_duration = QtWidgets.QLabel(self.widget_2)
        self.txt_leg_duration.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_leg_duration.setObjectName("txt_leg_duration")
        self.gridLayout_9.addWidget(self.txt_leg_duration, 2, 0, 1, 2)
        self.gridLayout_2.addWidget(self.widget_2, 2, 0, 1, 1)
        self.txt_leg_timer = QtWidgets.QLabel(self.LegTimers)
        font = QtGui.QFont()
        font.setFamily("Digital-7")
        font.setPointSize(70)
        self.txt_leg_timer.setFont(font)
        self.txt_leg_timer.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_leg_timer.setObjectName("txt_leg_timer")
        self.gridLayout_2.addWidget(self.txt_leg_timer, 0, 0, 2, 1)
        self.gridLayout.addWidget(self.LegTimers, 0, 3, 2, 2)
        self.LegInformation = QtWidgets.QGroupBox(self.centralwidget)
        self.LegInformation.setObjectName("LegInformation")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.LegInformation)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.leg_next = QtWidgets.QPushButton(self.LegInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leg_next.sizePolicy().hasHeightForWidth())
        self.leg_next.setSizePolicy(sizePolicy)
        self.leg_next.setObjectName("leg_next")
        self.gridLayout_4.addWidget(self.leg_next, 2, 2, 1, 1)
        self.leg_previous = QtWidgets.QPushButton(self.LegInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leg_previous.sizePolicy().hasHeightForWidth())
        self.leg_previous.setSizePolicy(sizePolicy)
        self.leg_previous.setObjectName("leg_previous")
        self.gridLayout_4.addWidget(self.leg_previous, 2, 0, 1, 1)
        self.widget_3 = QtWidgets.QWidget(self.LegInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_3.sizePolicy().hasHeightForWidth())
        self.widget_3.setSizePolicy(sizePolicy)
        self.widget_3.setObjectName("widget_3")
        self.gridlayout = QtWidgets.QGridLayout(self.widget_3)
        self.gridlayout.setContentsMargins(0, 0, 0, 0)
        self.gridlayout.setObjectName("gridlayout")
        self.landing_time = QtWidgets.QDateTimeEdit(self.widget_3)
        self.landing_time.setAlignment(QtCore.Qt.AlignCenter)
        self.landing_time.setObjectName("landing_time")
        self.gridlayout.addWidget(self.landing_time, 2, 1, 1, 1)
        self.set_landingFP = QtWidgets.QCheckBox(self.widget_3)
        self.set_landingFP.setChecked(True)
        self.set_landingFP.setObjectName("set_landingFP")
        self.gridlayout.addWidget(self.set_landingFP, 2, 0, 1, 1)
        self.set_takeoffFP = QtWidgets.QCheckBox(self.widget_3)
        self.set_takeoffFP.setChecked(True)
        self.set_takeoffFP.setObjectName("set_takeoffFP")
        self.gridlayout.addWidget(self.set_takeoffFP, 1, 0, 1, 1)
        self.takeoff_time = QtWidgets.QDateTimeEdit(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.takeoff_time.sizePolicy().hasHeightForWidth())
        self.takeoff_time.setSizePolicy(sizePolicy)
        self.takeoff_time.setAlignment(QtCore.Qt.AlignCenter)
        self.takeoff_time.setObjectName("takeoff_time")
        self.gridlayout.addWidget(self.takeoff_time, 1, 1, 1, 1)
        self.flightplan_filename = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.flightplan_filename.setFont(font)
        self.flightplan_filename.setAlignment(QtCore.Qt.AlignCenter)
        self.flightplan_filename.setObjectName("flightplan_filename")
        self.gridlayout.addWidget(self.flightplan_filename, 0, 0, 1, 1)
        self.flightplan_openfile = QtWidgets.QPushButton(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.flightplan_openfile.sizePolicy().hasHeightForWidth())
        self.flightplan_openfile.setSizePolicy(sizePolicy)
        self.flightplan_openfile.setAutoDefault(True)
        self.flightplan_openfile.setObjectName("flightplan_openfile")
        self.gridlayout.addWidget(self.flightplan_openfile, 0, 1, 1, 1)
        self.gridLayout_4.addWidget(self.widget_3, 0, 0, 1, 3)
        self.leg_details = QtWidgets.QWidget(self.LegInformation)
        self.leg_details.setObjectName("leg_details")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.leg_details)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.txt_elevation = QtWidgets.QLabel(self.leg_details)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_elevation.sizePolicy().hasHeightForWidth())
        self.txt_elevation.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.txt_elevation.setFont(font)
        self.txt_elevation.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.txt_elevation.setObjectName("txt_elevation")
        self.gridLayout_6.addWidget(self.txt_elevation, 3, 0, 1, 1)
        self.leg_rofrofrt = QtWidgets.QLabel(self.leg_details)
        self.leg_rofrofrt.setText("")
        self.leg_rofrofrt.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.leg_rofrofrt.setObjectName("leg_rofrofrt")
        self.gridLayout_6.addWidget(self.leg_rofrofrt, 4, 1, 1, 1)
        self.leg_elevation = QtWidgets.QLabel(self.leg_details)
        self.leg_elevation.setText("")
        self.leg_elevation.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.leg_elevation.setObjectName("leg_elevation")
        self.gridLayout_6.addWidget(self.leg_elevation, 3, 1, 1, 1)
        self.leg_obsblock = QtWidgets.QLabel(self.leg_details)
        self.leg_obsblock.setText("")
        self.leg_obsblock.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.leg_obsblock.setObjectName("leg_obsblock")
        self.gridLayout_6.addWidget(self.leg_obsblock, 5, 1, 1, 1)
        self.txt_leg = QtWidgets.QLabel(self.leg_details)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_leg.sizePolicy().hasHeightForWidth())
        self.txt_leg.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.txt_leg.setFont(font)
        self.txt_leg.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.txt_leg.setObjectName("txt_leg")
        self.gridLayout_6.addWidget(self.txt_leg, 1, 0, 1, 1)
        self.txt_rof = QtWidgets.QLabel(self.leg_details)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_rof.sizePolicy().hasHeightForWidth())
        self.txt_rof.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.txt_rof.setFont(font)
        self.txt_rof.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.txt_rof.setObjectName("txt_rof")
        self.gridLayout_6.addWidget(self.txt_rof, 4, 0, 1, 1)
        self.leg_number = QtWidgets.QLabel(self.leg_details)
        self.leg_number.setText("")
        self.leg_number.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.leg_number.setObjectName("leg_number")
        self.gridLayout_6.addWidget(self.leg_number, 1, 1, 1, 1)
        self.txt_obsplan = QtWidgets.QLabel(self.leg_details)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_obsplan.sizePolicy().hasHeightForWidth())
        self.txt_obsplan.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.txt_obsplan.setFont(font)
        self.txt_obsplan.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.txt_obsplan.setObjectName("txt_obsplan")
        self.gridLayout_6.addWidget(self.txt_obsplan, 5, 0, 1, 1)
        self.leg_target = QtWidgets.QLabel(self.leg_details)
        self.leg_target.setText("")
        self.leg_target.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.leg_target.setObjectName("leg_target")
        self.gridLayout_6.addWidget(self.leg_target, 2, 1, 1, 1)
        self.txt_target = QtWidgets.QLabel(self.leg_details)
        self.txt_target.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_target.sizePolicy().hasHeightForWidth())
        self.txt_target.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.txt_target.setFont(font)
        self.txt_target.setLineWidth(1)
        self.txt_target.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.txt_target.setObjectName("txt_target")
        self.gridLayout_6.addWidget(self.txt_target, 2, 0, 1, 1)
        self.gridLayout_4.addWidget(self.leg_details, 1, 0, 1, 3)
        self.gridLayout.addWidget(self.LegInformation, 0, 0, 2, 2)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.set_takeoff_time = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.set_takeoff_time.sizePolicy().hasHeightForWidth())
        self.set_takeoff_time.setSizePolicy(sizePolicy)
        self.set_takeoff_time.setObjectName("set_takeoff_time")
        self.gridLayout_7.addWidget(self.set_takeoff_time, 2, 0, 1, 1)
        self.set_landing_time = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.set_landing_time.sizePolicy().hasHeightForWidth())
        self.set_landing_time.setSizePolicy(sizePolicy)
        self.set_landing_time.setCheckable(False)
        self.set_landing_time.setFlat(False)
        self.set_landing_time.setObjectName("set_landing_time")
        self.gridLayout_7.addWidget(self.set_landing_time, 2, 1, 1, 1)
        self.set_takeofflanding = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.set_takeofflanding.sizePolicy().hasHeightForWidth())
        self.set_takeofflanding.setSizePolicy(sizePolicy)
        self.set_takeofflanding.setObjectName("set_takeofflanding")
        self.gridLayout_7.addWidget(self.set_takeofflanding, 2, 2, 1, 1)
        self.txt_ttl = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Digital-7")
        font.setPointSize(50)
        self.txt_ttl.setFont(font)
        self.txt_ttl.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_ttl.setObjectName("txt_ttl")
        self.gridLayout_7.addWidget(self.txt_ttl, 1, 0, 1, 3)
        self.txt_met = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Digital-7")
        font.setPointSize(50)
        self.txt_met.setFont(font)
        self.txt_met.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_met.setObjectName("txt_met")
        self.gridLayout_7.addWidget(self.txt_met, 0, 0, 1, 3)
        self.gridLayout.addWidget(self.groupBox, 0, 2, 1, 1)
        self.TimesWorld = QtWidgets.QGroupBox(self.centralwidget)
        self.TimesWorld.setObjectName("TimesWorld")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.TimesWorld)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.txt_utc = QtWidgets.QLabel(self.TimesWorld)
        font = QtGui.QFont()
        font.setFamily("Digital-7")
        font.setPointSize(50)
        self.txt_utc.setFont(font)
        self.txt_utc.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_utc.setObjectName("txt_utc")
        self.gridLayout_5.addWidget(self.txt_utc, 0, 0, 1, 1)
        self.txt_localtime = QtWidgets.QLabel(self.TimesWorld)
        font = QtGui.QFont()
        font.setFamily("Digital-7")
        font.setPointSize(50)
        self.txt_localtime.setFont(font)
        self.txt_localtime.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_localtime.setObjectName("txt_localtime")
        self.gridLayout_5.addWidget(self.txt_localtime, 1, 0, 1, 1)
        self.gridLayout.addWidget(self.TimesWorld, 1, 2, 1, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.groupBox_2)
        self.tabWidget.setObjectName("tabWidget")
        self.directorLogTab = QtWidgets.QWidget()
        self.directorLogTab.setObjectName("directorLogTab")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.directorLogTab)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.log_quick_takeoff = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_takeoff.setObjectName("log_quick_takeoff")
        self.gridLayout_10.addWidget(self.log_quick_takeoff, 0, 0, 1, 1)
        self.log_quick_onheading = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_onheading.setObjectName("log_quick_onheading")
        self.gridLayout_10.addWidget(self.log_quick_onheading, 0, 1, 1, 1)
        self.log_quick_ontarget = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_ontarget.setObjectName("log_quick_ontarget")
        self.gridLayout_10.addWidget(self.log_quick_ontarget, 0, 2, 1, 1)
        self.log_quick_turning = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_turning.setObjectName("log_quick_turning")
        self.gridLayout_10.addWidget(self.log_quick_turning, 0, 3, 1, 1)
        self.log_quick_faultmccs = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_faultmccs.setObjectName("log_quick_faultmccs")
        self.gridLayout_10.addWidget(self.log_quick_faultmccs, 0, 4, 1, 1)
        self.log_quick_faultsi = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_faultsi.setObjectName("log_quick_faultsi")
        self.gridLayout_10.addWidget(self.log_quick_faultsi, 0, 5, 1, 1)
        self.log_quick_landing = QtWidgets.QPushButton(self.directorLogTab)
        self.log_quick_landing.setObjectName("log_quick_landing")
        self.gridLayout_10.addWidget(self.log_quick_landing, 0, 6, 1, 2)
        self.log_save = QtWidgets.QPushButton(self.directorLogTab)
        self.log_save.setObjectName("log_save")
        self.gridLayout_10.addWidget(self.log_save, 0, 8, 1, 1)
        self.log_display = QtWidgets.QTextEdit(self.directorLogTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.log_display.sizePolicy().hasHeightForWidth())
        self.log_display.setSizePolicy(sizePolicy)
        self.log_display.setReadOnly(True)
        self.log_display.setObjectName("log_display")
        self.gridLayout_10.addWidget(self.log_display, 1, 0, 1, 9)
        self.log_inputline = QtWidgets.QLineEdit(self.directorLogTab)
        self.log_inputline.setObjectName("log_inputline")
        self.gridLayout_10.addWidget(self.log_inputline, 2, 0, 1, 7)
        self.log_post = QtWidgets.QPushButton(self.directorLogTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.log_post.sizePolicy().hasHeightForWidth())
        self.log_post.setSizePolicy(sizePolicy)
        self.log_post.setObjectName("log_post")
        self.gridLayout_10.addWidget(self.log_post, 2, 7, 1, 1)
        self.txt_logoutputname = QtWidgets.QLabel(self.directorLogTab)
        font = QtGui.QFont()
        font.setItalic(True)
        self.txt_logoutputname.setFont(font)
        self.txt_logoutputname.setAlignment(QtCore.Qt.AlignCenter)
        self.txt_logoutputname.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.txt_logoutputname.setObjectName("txt_logoutputname")
        self.gridLayout_10.addWidget(self.txt_logoutputname, 2, 8, 1, 1)
        self.tabWidget.addTab(self.directorLogTab, "")
        self.dataLogTab = QtWidgets.QWidget()
        self.dataLogTab.setObjectName("dataLogTab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.dataLogTab)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.table_datalog = QtWidgets.QTableWidget(self.dataLogTab)
        self.table_datalog.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.table_datalog.setAlternatingRowColors(True)
        self.table_datalog.setObjectName("table_datalog")
        self.table_datalog.setColumnCount(0)
        self.table_datalog.setRowCount(0)
        self.gridLayout_3.addWidget(self.table_datalog, 9, 0, 1, 6)
        self.datalog_opendir = QtWidgets.QPushButton(self.dataLogTab)
        self.datalog_opendir.setObjectName("datalog_opendir")
        self.gridLayout_3.addWidget(self.datalog_opendir, 0, 0, 1, 1)
        self.txt_datalogdir = QtWidgets.QLabel(self.dataLogTab)
        font = QtGui.QFont()
        font.setItalic(True)
        self.txt_datalogdir.setFont(font)
        self.txt_datalogdir.setObjectName("txt_datalogdir")
        self.gridLayout_3.addWidget(self.txt_datalogdir, 0, 1, 1, 3)
        self.txt_datalogsavefile = QtWidgets.QLabel(self.dataLogTab)
        font = QtGui.QFont()
        font.setItalic(True)
        self.txt_datalogsavefile.setFont(font)
        self.txt_datalogsavefile.setObjectName("txt_datalogsavefile")
        self.gridLayout_3.addWidget(self.txt_datalogsavefile, 1, 1, 1, 3)
        self.datalog_savefile = QtWidgets.QPushButton(self.dataLogTab)
        self.datalog_savefile.setObjectName("datalog_savefile")
        self.gridLayout_3.addWidget(self.datalog_savefile, 1, 0, 1, 1)
        self.widget_6 = QtWidgets.QWidget(self.dataLogTab)
        self.widget_6.setObjectName("widget_6")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.widget_6)
        self.gridLayout_14.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.datalog_editkeywords = QtWidgets.QPushButton(self.widget_6)
        self.datalog_editkeywords.setObjectName("datalog_editkeywords")
        self.gridLayout_14.addWidget(self.datalog_editkeywords, 0, 4, 1, 1)
        self.datalog_forcewrite = QtWidgets.QPushButton(self.widget_6)
        self.datalog_forcewrite.setObjectName("datalog_forcewrite")
        self.gridLayout_14.addWidget(self.datalog_forcewrite, 0, 1, 1, 1)
        self.datalog_addrow = QtWidgets.QPushButton(self.widget_6)
        self.datalog_addrow.setObjectName("datalog_addrow")
        self.gridLayout_14.addWidget(self.datalog_addrow, 0, 2, 1, 1)
        self.datalog_deleterow = QtWidgets.QPushButton(self.widget_6)
        self.datalog_deleterow.setObjectName("datalog_deleterow")
        self.gridLayout_14.addWidget(self.datalog_deleterow, 0, 3, 1, 1)
        self.datalog_forceupdate = QtWidgets.QPushButton(self.widget_6)
        self.datalog_forceupdate.setObjectName("datalog_forceupdate")
        self.gridLayout_14.addWidget(self.datalog_forceupdate, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.widget_6, 10, 0, 1, 6)
        self.widget_5 = QtWidgets.QWidget(self.dataLogTab)
        self.widget_5.setObjectName("widget_5")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.widget_5)
        self.gridLayout_12.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.datalog_instrumentselect = QtWidgets.QComboBox(self.widget_5)
        self.datalog_instrumentselect.setObjectName("datalog_instrumentselect")
        self.datalog_instrumentselect.addItem("")
        self.datalog_instrumentselect.addItem("")
        self.gridLayout_12.addWidget(self.datalog_instrumentselect, 1, 3, 1, 1)
        self.datalog_autoupdate = QtWidgets.QCheckBox(self.widget_5)
        self.datalog_autoupdate.setChecked(True)
        self.datalog_autoupdate.setObjectName("datalog_autoupdate")
        self.gridLayout_12.addWidget(self.datalog_autoupdate, 0, 1, 1, 1)
        self.txt_datalog_instrument = QtWidgets.QLabel(self.widget_5)
        self.txt_datalog_instrument.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.txt_datalog_instrument.setObjectName("txt_datalog_instrument")
        self.gridLayout_12.addWidget(self.txt_datalog_instrument, 1, 1, 1, 1)
        self.datalog_updateinterval = QtWidgets.QSpinBox(self.widget_5)
        self.datalog_updateinterval.setAlignment(QtCore.Qt.AlignCenter)
        self.datalog_updateinterval.setProperty("value", 5)
        self.datalog_updateinterval.setObjectName("datalog_updateinterval")
        self.gridLayout_12.addWidget(self.datalog_updateinterval, 0, 3, 1, 1)
        self.gridLayout_3.addWidget(self.widget_5, 0, 4, 2, 2)
        self.tabWidget.addTab(self.dataLogTab, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.gridLayout.addWidget(self.groupBox_2, 2, 0, 1, 5)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SOFIA Science Cruise Director"))
        self.LegTimers.setTitle(_translate("MainWindow", "Leg Timers"))
        self.leg_timer_stop.setText(_translate("MainWindow", "Stop"))
        self.leg_timer_reset.setText(_translate("MainWindow", "Reset"))
        self.leg_timer_start.setText(_translate("MainWindow", "Start"))
        self.time_select_remaining.setText(_translate("MainWindow", "Time Remaining"))
        self.time_select_elapsed.setText(_translate("MainWindow", "Time Elapsed"))
        self.leg_duration.setToolTip(_translate("MainWindow", "HH:MM:SS"))
        self.leg_duration.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.txt_leg_duration.setText(_translate("MainWindow", "Leg Duration"))
        self.txt_leg_timer.setText(_translate("MainWindow", "+00:00:00"))
        self.LegInformation.setTitle(_translate("MainWindow", "Flight Plan Information"))
        self.leg_next.setText(_translate("MainWindow", "Next Leg"))
        self.leg_next.setShortcut(_translate("MainWindow", ">, Ctrl+M"))
        self.leg_previous.setText(_translate("MainWindow", "Previous Leg"))
        self.leg_previous.setShortcut(_translate("MainWindow", "<, Ctrl+N"))
        self.landing_time.setDisplayFormat(_translate("MainWindow", "MM/dd/yyyy HH:mm:ss"))
        self.set_landingFP.setText(_translate("MainWindow", "Set Landing from Plan"))
        self.set_takeoffFP.setText(_translate("MainWindow", "Set Takeoff from Plan"))
        self.takeoff_time.setDisplayFormat(_translate("MainWindow", "MM/dd/yyyy HH:mm:ss"))
        self.flightplan_filename.setText(_translate("MainWindow", "No Flight Plan Loaded!"))
        self.flightplan_openfile.setText(_translate("MainWindow", "Open Flight Plan"))
        self.flightplan_openfile.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.txt_elevation.setText(_translate("MainWindow", "Elevation Range:"))
        self.txt_leg.setText(_translate("MainWindow", "Leg:"))
        self.txt_rof.setText(_translate("MainWindow", "ROF | ROFrate:"))
        self.txt_obsplan.setText(_translate("MainWindow", "ObsPlan:"))
        self.txt_target.setText(_translate("MainWindow", "Target:"))
        self.groupBox.setTitle(_translate("MainWindow", "Current Flight Progress"))
        self.set_takeoff_time.setText(_translate("MainWindow", "Start MET"))
        self.set_landing_time.setText(_translate("MainWindow", "Start TTL"))
        self.set_takeofflanding.setText(_translate("MainWindow", "Start Both"))
        self.txt_ttl.setText(_translate("MainWindow", "TTL"))
        self.txt_met.setText(_translate("MainWindow", "MET"))
        self.TimesWorld.setTitle(_translate("MainWindow", "World Times"))
        self.txt_utc.setText(_translate("MainWindow", "UTC"))
        self.txt_localtime.setText(_translate("MainWindow", "LOCAL"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Logging"))
        self.log_quick_takeoff.setText(_translate("MainWindow", "Takeoff"))
        self.log_quick_onheading.setText(_translate("MainWindow", "On Heading"))
        self.log_quick_ontarget.setText(_translate("MainWindow", "On Target"))
        self.log_quick_turning.setText(_translate("MainWindow", "Turning"))
        self.log_quick_faultmccs.setText(_translate("MainWindow", "MCCS Problem"))
        self.log_quick_faultsi.setText(_translate("MainWindow", "SI Problem"))
        self.log_quick_landing.setText(_translate("MainWindow", "Landing"))
        self.log_save.setText(_translate("MainWindow", "Choose Output Filename"))
        self.log_display.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'.Lucida Grande UI\'; font-size:13pt;\"><br /></p></body></html>"))
        self.log_post.setText(_translate("MainWindow", "Post"))
        self.txt_logoutputname.setText(_translate("MainWindow", "No Output Filename!"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.directorLogTab), _translate("MainWindow", "Cruise Director Log"))
        self.datalog_opendir.setText(_translate("MainWindow", "Set Data Directory"))
        self.txt_datalogdir.setText(_translate("MainWindow", "No Directory Chosen to Scan!"))
        self.txt_datalogsavefile.setText(_translate("MainWindow", "No Output Filename!"))
        self.datalog_savefile.setText(_translate("MainWindow", "Set Log Output File"))
        self.datalog_editkeywords.setText(_translate("MainWindow", "Edit Keywords ..."))
        self.datalog_forcewrite.setText(_translate("MainWindow", "Force Write"))
        self.datalog_addrow.setText(_translate("MainWindow", "Add a Blank Row"))
        self.datalog_deleterow.setText(_translate("MainWindow", "Remove Highlighted Row"))
        self.datalog_forceupdate.setText(_translate("MainWindow", "Force Update"))
        self.datalog_instrumentselect.setItemText(0, _translate("MainWindow", "HAWC+ (Flight)"))
        self.datalog_instrumentselect.setItemText(1, _translate("MainWindow", "HAWC+ (Ground)"))
        self.datalog_autoupdate.setText(_translate("MainWindow", "Autoupdate every:"))
        self.txt_datalog_instrument.setText(_translate("MainWindow", "Instrument:"))
        self.datalog_updateinterval.setSuffix(_translate("MainWindow", " seconds"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.dataLogTab), _translate("MainWindow", "Data Log"))

